grafana:
  enabled: false
  forceDeployDashboards: true
  operator:
    dashboardsConfigMapRefEnabled: true
    folder: Kubernetes Default
    matchLabels:
      dashboards: grafana

nodeExporter:
  operatingSystems:
    aix:
      enabled: false
    darwin:
      enabled: false

kubeControllerManager:
  endpoints:
    - 172.31.50.48
    - 172.31.50.49
    - 172.31.50.50

kubeEtcd:
  endpoints:
    - 172.31.50.48
    - 172.31.50.49
    - 172.31.50.50

kubeScheduler:
  endpoints:
    - 172.31.50.48
    - 172.31.50.49
    - 172.31.50.50

# NOTE: Replaced by Cilium
kubeProxy:
  enabled: false

prometheus:
  prometheusSpec:
    replicas: 2
    enableFeatures:
      - exemplar-storage
    retentionSize: 40GiB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn-single-replica
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false

alertmanager:
  alertmanagerSpec:
    replicas: 2
    secrets:
      - inchident-bot-secret
      - healthcheck-io-webhook

  config:
    route:
      # receiver: inchident-telegram-receiver
      routes:
        - receiver: healthcheck-io-webhook
          group_interval: 1m
          repeat_interval: 50s
          group_wait: 0s
          matchers:
            - alertname = "Watchdog"
    receivers:
      - name: inchident-telegram-receiver
        telegram_configs:
          - bot_token_file: /etc/alertmanager/secrets/inchident-bot-secret/token
            chat_id: -1001844822513
            message: '{{ template "telegram.message" . }}'
      - name: healthcheck-io-webhook
        webhook_configs:
          - url_file: /etc/alertmanager/secrets/healthcheck-io-webhook/url

  templateFiles:
    telegram_template.tmpl: |-
      {{- /* Telegram message to use: {{ template "telegram.message" . }} */ -}}
      {{ define "__alerts_list" -}}
      {{ range . }}
      {{if ne (index .Labels "alertname") "" -}}
      {{ if eq .Status "firing" }}üî¥{{ else }}üü¢{{ end }}
          {{- if ne (index .Labels "severity") "" -}}
              <u><b>{{ index .Labels "severity" }}</b></u> {{ end -}}
      <b>{{ index .Labels "alertname" }}</b>
      üïô {{ .StartsAt.Format "15:04:05 üóìÔ∏è 2006-01-02" }}{{ end }}

      <b>Summary:</b> {{ if len .Annotations.summary }}{{ trimSpace .Annotations.summary }}{{ else }}N/A{{ end }}
      <b>Description:</b> {{ if len .Annotations.description }}{{ trimSpace .Annotations.description }}{{ else }}N/A{{ end }}
      <b>Impact:</b> {{ if len .Annotations.impact }}{{ trimSpace .Annotations.impact }}{{ else }}N/A{{ end }}

      {{ if len .Labels -}}
      <b>Labels:</b>
      <pre>
      {{- range .Labels.SortedPairs -}}
      - {{ .Name }}: {{ .Value }}
      {{ end -}}
      </pre>
      {{ end }}
      {{- if len .GeneratorURL }}<a href="{{ .GeneratorURL }}">source</a>{{ end }}
      ---
      {{- end -}} {{- /* range */ -}}
      {{- end -}} {{- /* define __alerts_list */ -}}

      {{ define "telegram.message" }}
      {{ if gt (len .Alerts.Firing) 0 }}
      üö® <b>ALARM</b> (#{{ .Alerts.Firing | len }})
      {{- template "__alerts_list" .Alerts.Firing }}{{ end -}}
      {{ if gt (len .Alerts.Resolved) 0 }}
      ‚úÖ <b>RESOLVED</b> (#{{ .Alerts.Resolved | len }})
      {{- template "__alerts_list" .Alerts.Resolved }}{{ end }}

      <a href="{{ .ExternalURL }}">üì≤ Grafana</a>
      {{- end -}}
